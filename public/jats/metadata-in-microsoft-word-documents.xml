<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN"
                  "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
</journal-title-group>
<issn></issn>
<publisher>
<publisher-name></publisher-name>
</publisher>
</journal-meta>
<article-meta>
<title-group>
<article-title>Metadata in Microsoft Word documents</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<string-name>Martin Fenner</string-name>
</contrib>
</contrib-group>
<pub-date pub-type="epub" iso-8601-date="2015-03-20">
<day>20</day>
<month>3</month>
<year>2015</year>
</pub-date>
</article-meta>
</front>
<body>
<p>Metadata such as author, title, journal or persistent identifier are
essential for scholarly documents, and some of us are spending a
significant part of our time adding or fixing metadata. Unfortunately we
sometimes don’t pay enough attention to the flow of metadata, i.e. we
ignore already existing metadata, or reinvent the wheel in how we
describe or store them.</p>
<p>Storing metadata in text-based formats is usually straightforward.
This blog post is written in markdown with a
<ext-link ext-link-type="uri" xlink:href="http://yaml.org/">YAML
header</ext-link> - think of YAML as the more human-readable version of
JSON - at the beginning of the document:</p>
<preformat>---
title: Metadata in Microsoft Word documents
---</preformat>
<p>This is then translated into this HTML when the blog post is
published:</p>
<preformat>&lt;meta property=&quot;dc:title&quot; content=&quot;Metadata in Microsoft Word documents&quot; /&gt;</preformat>
<p>XML is of course a very natural format for metadata, here for example
<ext-link ext-link-type="uri" xlink:href="http://jats.nlm.nih.gov/publishing/tag-library/1.0/index.html">JATS</ext-link>
used for scholarly articles:</p>
<preformat>&lt;article-title&gt;Metadata in Microsoft Word documents&lt;/article-title&gt;</preformat>
<p>Many scholarly documents start out as Microsoft Word documents. And
while the <monospace>docx</monospace> format introduced by Microsoft in
Microsoft Office 2007
<ext-link ext-link-type="uri" xlink:href="http://officeopenxml.com/">is
XML-based</ext-link>, few users are aware of this fact. And probably
even fewer users (including myself) ever go to the
<monospace>Properties…</monospace> settings of a
<monospace>docx</monospace> document and add a
<monospace>title</monospace>, <monospace>keywords</monospace> or other
metadata (the <monospace>author</monospace> is usually set
automatically).</p>
<fig>
  <caption><p>Microsoft Word 2007 Properties. Image from
  <ext-link ext-link-type="uri" xlink:href="https://msdn.microsoft.com/en-us/library/bb308936(v=office.12).aspx">Microsoft
  Developer Network</ext-link></p></caption>
  <graphic mimetype="image" mime-subtype="gif" xlink:href="https://martinfenner.ghost.io/content/images/2021/01/IC164149.gif" xlink:title="" />
</fig>
<p>This is very unfortunate, as these metadata are very often required,
e.g. in a journal article submission, and then need to be collected
again, usually either by asking the author to fill out a web form,
and/or by extracting the metadata (e.g. title) from the document.</p>
<p>The best place for metadata is with the document (not
<italic>in</italic> the document), and if the file format
(<monospace>docx</monospace> in this case) supports it, we should take
advantage of this. The main benefit: metadata stay with the text when
the document is sent to co-authors via email, or put on a file server,
or into Dropbox.</p>
<p>In the case of <monospace>docx</monospace>, the metadata support is
actually pretty good, using the standard
<ext-link ext-link-type="uri" xlink:href="http://dublincore.org/">Dublin
Core</ext-link>, and storing the metadata in a separate file called
<monospace>core.xml</monospace>. You can see this file if you unzip your
<monospace>docx</monospace> file (e.g. after giving it a
<monospace>zip</monospace> extension). The
<monospace>core.xml</monospace> file for this blog post (after
converting the markdown file to <monospace>docx</monospace> using
<ext-link ext-link-type="uri" xlink:href="http://johnmacfarlane.net/pandoc/">Pandoc</ext-link>)
looks like this:</p>
<preformat>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;cp:coreProperties xmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metadata/core-properties&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; xmlns:dcmitype=&quot;http://purl.org/dc/dcmitype/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&lt;dc:title&gt;Metadata in Microsoft Word documents&lt;/dc:title&gt;&lt;dc:creator&gt;&lt;/dc:creator&gt;&lt;/cp:coreProperties&gt;</preformat>
<p>Because <monospace>docx</monospace> is XML, we can read/write this
file not only in Microsoft Word, e.g. using macros, but also outside of
Microsoft Word, e.g. in workflows that converts
<monospace>docx</monospace> documents into other formats, or tools that
check <monospace>docx</monospace> files for required metadata (e.g. by
using
<ext-link ext-link-type="uri" xlink:href="https://martinfenner.ghost.io/2015/03/20/metadata-in-microsoft-word-documents/2014/08/18/introducing-rakali/">rakali</ext-link>
that I wrote last year). So please encourage authors to use the
Microsoft Word <monospace>Properties…</monospace> settings, and update
existing tools to take advantage of the Dublin Core metadata stored in
every <monospace>docx</monospace> file.</p>
</body>
<back>
</back>
</article>
