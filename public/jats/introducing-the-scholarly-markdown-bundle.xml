<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN"
                  "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
</journal-title-group>
<issn></issn>
<publisher>
<publisher-name></publisher-name>
</publisher>
</journal-meta>
<article-meta>
<title-group>
<article-title>Introducing the Scholarly Markdown Bundle</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<string-name>Martin Fenner</string-name>
</contrib>
</contrib-group>
<pub-date pub-type="epub" iso-8601-date="2015-04-23">
<day>23</day>
<month>4</month>
<year>2015</year>
</pub-date>
</article-meta>
</front>
<body>
<p>Using Markdown to author scholarly documents is an attractive
alternative to the standard authoring tools Microsoft Word and LaTeX.
The feeling shared by many is that
<ext-link ext-link-type="uri" xlink:href="http://blog.martinfenner.org/2013/06/17/what-is-scholarly-markdown/">Scholarly
Markdown</ext-link> is 80% there, and that more effort is needed for the
remaining 20% - moving markdown from a niche into the mainstream. What
is mainly needed is building tools that connect the existing tools and
ideas, resulting in one or more services attractive to a critical number
of users. But maybe we also need to rethink the essential parts of
Scholarly Markdown. In this post I propose that we expand the concept
and define the <italic>Scholarly Markdown Bundle</italic>.</p>
<p>It is becoming increasingly clear that scholarly work canâ€™t be
adaequately described in a single text document, most commonly the
journal article. Not only are there associated metadata, assets such as
figures and supplementary information, but also the research data and
software needed to produce the work described in the publication. The
obvious next step is to think of scholarly work as a collection of
objects, most clearly described by Carol Goble and others as
<ext-link ext-link-type="uri" xlink:href="https://researchobject.github.io/specifications/bundle/">Research
Object Bundle</ext-link>.</p>
<p>There will probably never be a single authoring tool and format that
pleases everyone. Markdown has particular inherent strengths and
weaknesses, complex math or tables will probably always be easier with
other formats. The strength of markdown is the simplicity of the format.
Some things are hard or impossible to do, but many other things are much
simpler. Creating a useful markdown editor is much easier than a word
processor reading/writing <monospace>docx</monospace> format. Markdown
is also a perfect format to
<ext-link ext-link-type="uri" xlink:href="http://blog.martinfenner.org/2014/08/25/using-microsoft-word-with-git/">work
with</ext-link> version control systems such as git.</p>
<p>This low barrier of entry makes markdown perfect to be integrated
into many workflows. And we can go one step further than ePub and
Research Object Bundle, which use the related Universal Container Format
(<ext-link ext-link-type="uri" xlink:href="https://wikidocs.adobe.com/wiki/display/PDFNAV/Universal+Container+Format">UCF</ext-link>)
and ePub Open Container Format
(<ext-link ext-link-type="uri" xlink:href="http://www.idpf.org/epub/301/spec/epub-ocf.html">OCF</ext-link>),
respectively. Instead of using zip to compress a folder into a single
file we can use git version control instead: git provides the commands
<monospace>git bundle</monospace> and <monospace>git archive</monospace>
to compress a project under version control with or without version
history. I feel this format is both more powerful So I propose the
<italic>Scholarly Markdown Bundle</italic>:</p>
<list list-type="bullet">
  <list-item>
    <p>a git repository with one or more markdown files, either as a
    folder, or compressed into a single file using
    <monospace>git bundle</monospace></p>
  </list-item>
  <list-item>
    <p>a particular flavor or markdown called Scholarly Markdown, and
    discussed here and elsewhere before</p>
  </list-item>
  <list-item>
    <p>a <monospace>citeproc.json</monospace> file in the root of the
    project that contains all metadata relevant to the container,
    including references</p>
  </list-item>
</list>
<p>The <monospace>citeproc.json</monospace> file is similar to the
minimal metadata schema
<ext-link ext-link-type="uri" xlink:href="https://github.com/mbjones/codemeta">codemeta</ext-link>
proposed by Matt Jones and others, but is in the format used by Pandoc
today. This is
<ext-link ext-link-type="uri" xlink:href="http://blog.martinfenner.org/2013/07/30/citeproc-yaml-for-bibliographies/">important</ext-link>
because it adds citation parsing support out of the box. The last two
points rely on the
<ext-link ext-link-type="uri" xlink:href="http://pandoc.org/">Pandoc</ext-link>
document conversion tool, so Scholarly Markdown bundles are really
<bold><bold>markdown</bold></bold> + <bold><bold>Pandoc</bold></bold> +
<bold><bold>Citeproc/CSL</bold></bold> + <bold><bold>git</bold></bold>.
The format is flexible enough to not only describe scholarly articles,
but also other kinds of scholarly works, including scientific software
managed with git version control. And it integrates nicely with a number
of existing workflows, e.g. an R project using RStudio for both code and
text (in Rmarkdown). This format should also work for blogs like this
one, but I would have to separate the blog posts from the Jekyll site
generator code, a direction I suggested in the
<ext-link ext-link-type="uri" xlink:href="http://blog.martinfenner.org/2015/03/23/blogging-beyond-jekyll/">last</ext-link>
post.</p>
</body>
<back>
</back>
</article>
